// Code generated by qtc from "dashboard.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line internal/api/dashboard/templates/dashboard.qtpl:1
package templates

//line internal/api/dashboard/templates/dashboard.qtpl:1
import (
	"goction/internal/viewmodels"
	"strings"
	"time"
)

//line internal/api/dashboard/templates/dashboard.qtpl:7
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line internal/api/dashboard/templates/dashboard.qtpl:7
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line internal/api/dashboard/templates/dashboard.qtpl:7
func StreamDashboard(qw422016 *qt422016.Writer, data viewmodels.DashboardData) {
//line internal/api/dashboard/templates/dashboard.qtpl:7
	qw422016.N().S(`
<!DOCTYPE html>
<html lang="en" class="has-background-black-bis">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Goction Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css">
    <script defer src="https://use.fontawesome.com/releases/v5.15.4/js/all.js"></script>
    <style>
        body {
            display: flex;
            min-height: 100vh;
            flex-direction: column;
        }
        main {
            flex: 1;
        }
        .log-container {
            max-height: 400px;
            overflow-y: auto;
        }
    </style>
</head>
<body class="has-background-black-bis has-text-light">
    <nav class="navbar is-black" role="navigation" aria-label="main navigation">
        <div class="navbar-brand">
            <a class="navbar-item" href="/">
                <img src="https://goction.github.io/images/goction.png" alt="Goction Logo" height="28">
                <strong class="ml-2">Goction Dashboard</strong>
            </a>
            <div class="navbar-item">
                <span class="tag is-primary">Version: `)
//line internal/api/dashboard/templates/dashboard.qtpl:39
	qw422016.E().S(data.GoctionVersion)
//line internal/api/dashboard/templates/dashboard.qtpl:39
	qw422016.N().S(`</span>
            </div>
        </div>

        <div class="navbar-menu">
            <div class="navbar-end">
                <div class="navbar-item">
                    <div class="buttons">
                        <a class="button is-primary" href="https://goction.github.io" target="_blank">
                            <span class="icon">
                                <i class="fas fa-book"></i>
                            </span>
                            <span>Documentation</span>
                        </a>
                        <a class="button is-dark" href="/logout">
                            <span class="icon">
                                <i class="fas fa-sign-out-alt"></i>
                            </span>
                            <span>Logout</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <main>
        <section class="section">
            <div class="container">
                <h1 class="title has-text-primary">Goction Configuration</h1>
                <div class="box has-background-black-ter">
                    <div class="content has-text-grey-light">
                        <p><strong>Goctions Directory:</strong> `)
//line internal/api/dashboard/templates/dashboard.qtpl:71
	qw422016.E().S(data.Config.GoctionsDir)
//line internal/api/dashboard/templates/dashboard.qtpl:71
	qw422016.N().S(`</p>
                        <p><strong>Port:</strong> `)
//line internal/api/dashboard/templates/dashboard.qtpl:72
	qw422016.N().D(data.Config.Port)
//line internal/api/dashboard/templates/dashboard.qtpl:72
	qw422016.N().S(`</p>
                        <p><strong>Log File:</strong> `)
//line internal/api/dashboard/templates/dashboard.qtpl:73
	qw422016.E().S(data.Config.LogFile)
//line internal/api/dashboard/templates/dashboard.qtpl:73
	qw422016.N().S(`</p>
                        <p><strong>Stats File:</strong> `)
//line internal/api/dashboard/templates/dashboard.qtpl:74
	qw422016.E().S(data.Config.StatsFile)
//line internal/api/dashboard/templates/dashboard.qtpl:74
	qw422016.N().S(`</p>
                    </div>
                </div>

                <h1 class="title has-text-primary mt-6">Goction Statistics</h1>
                <div class="box has-background-black-ter">
                    <table class="table is-fullwidth has-background-black-ter has-text-grey-light">
                        <thead>
                            <tr>
                                <th class="has-text-grey-light">Goction Name</th>
                                <th class="has-text-grey-light">Total Calls</th>
                                <th class="has-text-grey-light">Successful Calls</th>
                                <th class="has-text-grey-light">Success Rate</th>
                                <th class="has-text-grey-light">Total Duration</th>
                                <th class="has-text-grey-light">Average Duration</th>
                                <th class="has-text-grey-light">Last Executed</th>
                            </tr>
                        </thead>
                        <tbody>
                            `)
//line internal/api/dashboard/templates/dashboard.qtpl:93
	for name, stat := range data.Stats {
//line internal/api/dashboard/templates/dashboard.qtpl:93
		qw422016.N().S(`
                            <tr>
                                <td>`)
//line internal/api/dashboard/templates/dashboard.qtpl:95
		qw422016.E().S(name)
//line internal/api/dashboard/templates/dashboard.qtpl:95
		qw422016.N().S(`</td>
                                <td>`)
//line internal/api/dashboard/templates/dashboard.qtpl:96
		qw422016.N().D(stat.TotalCalls)
//line internal/api/dashboard/templates/dashboard.qtpl:96
		qw422016.N().S(`</td>
                                <td>`)
//line internal/api/dashboard/templates/dashboard.qtpl:97
		qw422016.N().D(stat.SuccessfulCalls)
//line internal/api/dashboard/templates/dashboard.qtpl:97
		qw422016.N().S(`</td>
                                <td>
                                    `)
//line internal/api/dashboard/templates/dashboard.qtpl:99
		if stat.TotalCalls > 0 {
//line internal/api/dashboard/templates/dashboard.qtpl:99
			qw422016.N().S(`
                                        `)
//line internal/api/dashboard/templates/dashboard.qtpl:100
			qw422016.N().F(float64(stat.SuccessfulCalls) / float64(stat.TotalCalls) * 100)
//line internal/api/dashboard/templates/dashboard.qtpl:100
			qw422016.N().S(`%
                                    `)
//line internal/api/dashboard/templates/dashboard.qtpl:101
		} else {
//line internal/api/dashboard/templates/dashboard.qtpl:101
			qw422016.N().S(`
                                        N/A
                                    `)
//line internal/api/dashboard/templates/dashboard.qtpl:103
		}
//line internal/api/dashboard/templates/dashboard.qtpl:103
		qw422016.N().S(`
                                </td>
                                <td>`)
//line internal/api/dashboard/templates/dashboard.qtpl:105
		qw422016.E().S(stat.TotalDuration.String())
//line internal/api/dashboard/templates/dashboard.qtpl:105
		qw422016.N().S(`</td>
                                <td>
                                    `)
//line internal/api/dashboard/templates/dashboard.qtpl:107
		if stat.TotalCalls > 0 {
//line internal/api/dashboard/templates/dashboard.qtpl:107
			qw422016.N().S(`
                                        `)
//line internal/api/dashboard/templates/dashboard.qtpl:108
			qw422016.E().S((stat.TotalDuration / time.Duration(stat.TotalCalls)).String())
//line internal/api/dashboard/templates/dashboard.qtpl:108
			qw422016.N().S(`
                                    `)
//line internal/api/dashboard/templates/dashboard.qtpl:109
		} else {
//line internal/api/dashboard/templates/dashboard.qtpl:109
			qw422016.N().S(`
                                        N/A
                                    `)
//line internal/api/dashboard/templates/dashboard.qtpl:111
		}
//line internal/api/dashboard/templates/dashboard.qtpl:111
		qw422016.N().S(`
                                </td>
                                <td>`)
//line internal/api/dashboard/templates/dashboard.qtpl:113
		qw422016.E().S(stat.LastExecuted.Format("2006-01-02 15:04:05"))
//line internal/api/dashboard/templates/dashboard.qtpl:113
		qw422016.N().S(`</td>
                            </tr>
                            `)
//line internal/api/dashboard/templates/dashboard.qtpl:115
	}
//line internal/api/dashboard/templates/dashboard.qtpl:115
	qw422016.N().S(`
                        </tbody>
                    </table>
                </div>

                `)
//line internal/api/dashboard/templates/dashboard.qtpl:147
	qw422016.N().S(`

                <h1 class="title has-text-primary mt-6">Recent Logs</h1>
                <div class="box has-background-black-ter">
                    <div class="content has-text-grey-light log-container">
                        <pre class="has-background-black-ter has-text-grey-light">`)
//line internal/api/dashboard/templates/dashboard.qtpl:152
	qw422016.E().S(strings.Join(viewmodels.Reverse(data.RecentLogs), "\n"))
//line internal/api/dashboard/templates/dashboard.qtpl:152
	qw422016.N().S(`</pre>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <footer class="footer has-background-black-ter">
        <div class="content has-text-centered">
            <p class="has-text-grey-light">
                <strong class="has-text-primary">Goction</strong> by <a href="https://github.com/goction" class="has-text-primary">Goction Team</a>. The source code is licensed
                <a href="http://opensource.org/licenses/mit-license.php" class="has-text-primary">MIT</a>.
            </p>
        </div>
    </footer>
</body>
</html>
`)
//line internal/api/dashboard/templates/dashboard.qtpl:169
}

//line internal/api/dashboard/templates/dashboard.qtpl:169
func WriteDashboard(qq422016 qtio422016.Writer, data viewmodels.DashboardData) {
//line internal/api/dashboard/templates/dashboard.qtpl:169
	qw422016 := qt422016.AcquireWriter(qq422016)
//line internal/api/dashboard/templates/dashboard.qtpl:169
	StreamDashboard(qw422016, data)
//line internal/api/dashboard/templates/dashboard.qtpl:169
	qt422016.ReleaseWriter(qw422016)
//line internal/api/dashboard/templates/dashboard.qtpl:169
}

//line internal/api/dashboard/templates/dashboard.qtpl:169
func Dashboard(data viewmodels.DashboardData) string {
//line internal/api/dashboard/templates/dashboard.qtpl:169
	qb422016 := qt422016.AcquireByteBuffer()
//line internal/api/dashboard/templates/dashboard.qtpl:169
	WriteDashboard(qb422016, data)
//line internal/api/dashboard/templates/dashboard.qtpl:169
	qs422016 := string(qb422016.B)
//line internal/api/dashboard/templates/dashboard.qtpl:169
	qt422016.ReleaseByteBuffer(qb422016)
//line internal/api/dashboard/templates/dashboard.qtpl:169
	return qs422016
//line internal/api/dashboard/templates/dashboard.qtpl:169
}
